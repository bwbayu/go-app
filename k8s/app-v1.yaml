apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
data:
  mysql_db_host: mysql
  mysql_db_port: "3306"
  mysql_db_name: aws_academy
---
apiVersion: v1
kind: Secret
metadata: 
  name: mysql-secret
type: Opaque
data:
  mysql-root-username: cm9vdA==
  mysql-root-password: MTIzNDU2Nzg=
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: mysql-deployment
  labels: 
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql-container
          image: mysql:latest
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-root-password
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: mysql_db_name
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  selector:
    app: mysql
  ports:
    - port: 3306
      targetPort: 3306
  # type: ClusterIP
  clusterIP: None
---
apiVersion: batch/v1
kind: Job
metadata:
  name: migrate-users-db
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: migrate-users-db
          image: bwbayu/migrate-users-db:latest
---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: go-app-deployment
  labels:
    app: go-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-app
  template:
    metadata:
      labels:
        app: go-app
    spec:
      containers:
        - name: go-app
          image: bwbayu/go-app:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8081
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: mysql_db_host
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: mysql_db_port
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: mysql_db_name
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-root-username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-root-password
---
apiVersion: v1
kind: Service
metadata:
  name: go-app-svc
spec:
  selector:
    app: go-app
  ports:
    - port: 8081
      targetPort: 8081
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata: 
  name: go-mysql-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules: 
  - host: localhost
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: go-app-svc
            port:
              number: 8081